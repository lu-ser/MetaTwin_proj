{
    "info": {
        "_postman_id": "digital-twin-platform",
        "name": "Digital Twin Platform API",
        "description": "Complete API collection for Digital Twin Platform testing",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Register User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('user_id', responseJson.id);",
                                    "    console.log('User registered with ID:', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"{{test_user_name}}\",\n    \"email\": \"{{test_user_email}}\",\n    \"password\": \"{{test_user_password}}\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/auth/register",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    }
                },
                {
                    "name": "Login (OAuth2)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('auth_token', responseJson.access_token);",
                                    "    console.log('Auth token saved:', responseJson.access_token);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "{{test_user_email}}",
                                    "type": "text"
                                },
                                {
                                    "key": "password",
                                    "value": "{{test_user_password}}",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{base_url}}/auth/token",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "token"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Current User",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/auth/me",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "auth",
                                "me"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Users",
            "item": [
                {
                    "name": "List Users",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/users/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Create User",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('created_user_id', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/users/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/users/{{user_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "{{user_id}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Get User Devices",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/users/{{user_id}}/devices",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "{{user_id}}",
                                "devices"
                            ]
                        }
                    }
                },
                {
                    "name": "Get User Digital Twins",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/users/{{user_id}}/digital-twins",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "users",
                                "{{user_id}}",
                                "digital-twins"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Devices",
            "item": [
                {
                    "name": "List Devices",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/devices/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Create Ontology-based Device",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('device_id', responseJson.id);",
                                    "    pm.environment.set('device_api_key', responseJson.api_key);",
                                    "    pm.environment.set('digital_twin_id', responseJson.digital_twin_id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test Altimeter Device\",\n    \"device_type\": \"altimeter\",\n    \"attributes\": {\n        \"altimeter\": {\n            \"value\": 1500.5,\n            \"unit_measure\": \"meters\"\n        }\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/devices/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Create Template-based Device",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('template_device_id', responseJson.id);",
                                    "    pm.environment.set('template_device_api_key', responseJson.api_key);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Test Template Device\",\n    \"template_id\": \"{{template_id}}\",\n    \"attributes\": {\n        \"temperature\": {\n            \"value\": 23.5,\n            \"unit_measure\": \"°C\"\n        },\n        \"humidity\": {\n            \"value\": 65.2,\n            \"unit_measure\": \"%\"\n        }\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/devices/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Get Device by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/devices/{{device_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                "{{device_id}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Regenerate API Key",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('device_api_key', responseJson.api_key);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/devices/regenerate-api-key?device_id={{device_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                "regenerate-api-key"
                            ],
                            "query": [
                                {
                                    "key": "device_id",
                                    "value": "{{device_id}}"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Send Device Data (with API Key)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{device_api_key}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"altimeter\": 1650.8,\n    \"temperature\": 15.3\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/devices/data",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                "data"
                            ]
                        }
                    }
                },
                {
                    "name": "Delete Device",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/devices/{{device_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "devices",
                                "{{device_id}}"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Digital Twins",
            "item": [
                {
                    "name": "List Digital Twins",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Create Digital Twin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('direct_dt_id', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Direct Digital Twin\",\n    \"device_type\": \"heartRateMonitor\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/digital-twins/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Get Digital Twin by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/{{digital_twin_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "{{digital_twin_id}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Add Sensor Data to Digital Twin",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{device_api_key}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"attribute_name\": \"altimeter\",\n    \"value\": 1750.3,\n    \"unit_measure\": \"meters\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/digital-twins/{{digital_twin_id}}/data",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "{{digital_twin_id}}",
                                "data"
                            ]
                        }
                    }
                },
                {
                    "name": "Generate Random Data",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/{{digital_twin_id}}/generate-data",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "{{digital_twin_id}}",
                                "generate-data"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Digital Twin Sensor Data",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/{{digital_twin_id}}/data",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "{{digital_twin_id}}",
                                "data"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Templates",
            "item": [
                {
                    "name": "List Templates",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/templates/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "templates",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Create Custom Template",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('template_id', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Environmental Sensor Template\",\n    \"description\": \"Template for environmental monitoring devices\",\n    \"version\": \"1.0.0\",\n    \"attributes\": {\n        \"temperature\": {\n            \"name\": \"temperature\",\n            \"type\": \"number\",\n            \"unit_measure\": \"°C\",\n            \"description\": \"Temperature measurement\",\n            \"constraints\": {\n                \"required\": true,\n                \"min_value\": -50,\n                \"max_value\": 100\n            }\n        },\n        \"humidity\": {\n            \"name\": \"humidity\",\n            \"type\": \"number\",\n            \"unit_measure\": \"%\",\n            \"description\": \"Humidity percentage\",\n            \"constraints\": {\n                \"required\": true,\n                \"min_value\": 0,\n                \"max_value\": 100\n            }\n        },\n        \"location\": {\n            \"name\": \"location\",\n            \"type\": \"string\",\n            \"description\": \"Sensor location\",\n            \"constraints\": {\n                \"required\": false\n            }\n        }\n    },\n    \"is_ontology_based\": false\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/templates/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "templates",
                                ""
                            ]
                        }
                    }
                },
                {
                    "name": "Create Template from Ontology",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    const responseJson = pm.response.json();",
                                    "    pm.environment.set('ontology_template_id', responseJson.id);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"sensor_type\": \"averageHeartRate\",\n    \"name\": \"Heart Rate Monitor Template\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/templates/from-ontology",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "templates",
                                "from-ontology"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Template by ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/templates/{{template_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "templates",
                                "{{template_id}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Update Template",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Updated Environmental Sensor Template\",\n    \"description\": \"Updated template for environmental monitoring devices\",\n    \"version\": \"1.1.0\",\n    \"attributes\": {\n        \"temperature\": {\n            \"name\": \"temperature\",\n            \"type\": \"number\",\n            \"unit_measure\": \"°C\",\n            \"description\": \"Temperature measurement\",\n            \"constraints\": {\n                \"required\": true,\n                \"min_value\": -50,\n                \"max_value\": 100\n            }\n        },\n        \"humidity\": {\n            \"name\": \"humidity\",\n            \"type\": \"number\",\n            \"unit_measure\": \"%\",\n            \"description\": \"Humidity percentage\",\n            \"constraints\": {\n                \"required\": true,\n                \"min_value\": 0,\n                \"max_value\": 100\n            }\n        },\n        \"pressure\": {\n            \"name\": \"pressure\",\n            \"type\": \"number\",\n            \"unit_measure\": \"hPa\",\n            \"description\": \"Atmospheric pressure\",\n            \"constraints\": {\n                \"required\": false,\n                \"min_value\": 800,\n                \"max_value\": 1200\n            }\n        }\n    }\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/templates/{{template_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "templates",
                                "{{template_id}}"
                            ]
                        }
                    }
                },
                {
                    "name": "Delete Template",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/templates/{{template_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "templates",
                                "{{template_id}}"
                            ]
                        }
                    }
                }
            ]
        },
        {
            "name": "Sensors & Ontology",
            "item": [
                {
                    "name": "Get Sensor Types",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/sensors/types",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "sensors",
                                "types"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Sensor Type Details",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/sensors/types/altimeter",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "sensors",
                                "types",
                                "altimeter"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Sensor Hierarchy",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/sensors/hierarchy",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "sensors",
                                "hierarchy"
                            ]
                        }
                    }
                },
                {
                    "name": "Check Sensor Compatibility",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/sensors/compatibility?device_type=altimeter",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "sensors",
                                "compatibility"
                            ],
                            "query": [
                                {
                                    "key": "device_type",
                                    "value": "altimeter"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Add Sensor Measurement",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"attribute_name\": \"altimeter\",\n    \"value\": 2100.5,\n    \"unit_measure\": \"meters\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/sensors/measurements",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "sensors",
                                "measurements"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Sensor Measurements",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/sensors/measurements?sensor_type=altimeter&limit=10",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "sensors",
                                "measurements"
                            ],
                            "query": [
                                {
                                    "key": "sensor_type",
                                    "value": "altimeter"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "Get Ontology Classes",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/ontology/classes",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "ontology",
                                "classes"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Ontology Root Classes",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/ontology/root-classes",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "ontology",
                                "root-classes"
                            ]
                        }
                    }
                },
                {
                    "name": "Get Ontology Class Details",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/digital-twins/ontology/class/altimeter",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "digital-twins",
                                "ontology",
                                "class",
                                "altimeter"
                            ]
                        }
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Auto-generate timestamp for requests",
                    "pm.globals.set('timestamp', new Date().toISOString());"
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "// Global test script to handle common response validations",
                    "if (pm.response.code >= 400) {",
                    "    console.log('Error Response:', pm.response.text());",
                    "}"
                ]
            }
        }
    ]
}